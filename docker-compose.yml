version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx:
    image: nginx:1.19.4
    container_name: nginx
    restart: always
    expose:
      - "80"
    volumes:
      - ./docker-compose/nginx:/etc/nginx/conf.d
    environment:
      - VIRTUAL_HOST=botpress.laravelthewebartisan.com
      - LETSENCRYPT_HOST=botpress.laravelthewebartisan.com
      - LETSENCRYPT_EMAIL=roberth.rodriguez@laravelthewebartisan.com
    depends_on:
      - nginx-proxy
      - letsencrypt

  botpress:
    image: botpress/server:latest
    container_name: botpress
    working_dir: /var/www
    command: /botpress/bp
    expose:
      - 3000
    volumes:
      - ./botpress/data:/botpress/data
    ports:
      - "3000:3000"

  postgres:
    image: postgres:11.2-alpine
    container_name: postgres
    expose:
      - 5435
    environment:
      PGPORT: 5435
      POSTGRES_DB: botpress_db
      POSTGRES_PASSWORD: secretpw
      POSTGRES_USER: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:5.0.5-alpine
    container_name: redis
    expose:
      - 6379
    command: redis-server --requirepass redisPassword
    volumes:
      - redisdata:/data

volumes:
  certs:
  vhostd:
  redisdata:
  pgdata: